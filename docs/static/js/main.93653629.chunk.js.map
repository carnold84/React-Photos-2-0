{"version":3,"sources":["components/Actionbar.js","components/Loading.js","components/Grid.js","components/Picture.js","components/Image.js","components/Slide.js","App.js","registerServiceWorker.js","index.js","images/back-arrow.svg"],"names":["Container","styled","div","BackBtn","button","Title","h2","Actionbar","PropTypes","func","props","title","onBackClick","back_btn","undefined","onClick","src","back_button","alt","rotate","keyframes","dash","Loader","Circle","svg","Path","circle","Loading","viewBox","cx","cy","r","fill","stroke-width","stroke-miterlimit","Grid","propTypes","array","children","width","height","border","BgImage","type","url","opacity","TYPES","Picture","useState","imageUrl","setImageUrl","content","image","Image","addEventListener","string","oneOf","defaultProps","p","id","Slide","Content","App","state","view","APP_STATES","ALBUMS","albums","albumsById","albumId","photoId","PHOTOS","PHOTO","setState","onImageClick","createImages","data","map","item","image_url","photos","length","key","source","this","fetch","then","response","json","forEach","album","catch","err","console","error","container","items","photo","_find","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","document","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.93653629.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport back_button from '../images/back-arrow.svg';\n\nconst Container = styled.div`\n    position: relative;\n    width: 100%;\n    height: 50px;\n    border-bottom: rgba(0, 0, 0, 0.05) solid 1px;\n    display: flex;\n`;\n\nconst BackBtn = styled.button`\n    height: 50px;\n    width: 50px;\n    cursor: pointer;\n    border: none;\n    border-right: rgba(0, 0, 0, 0.05) solid 1px;\n    background-color: transparent;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst Title = styled.h2`\n    font-size: 1.2em;\n    line-height: 1em;\n    font-weight: normal;\n    margin: 1px 0 0 15px;\n    flex-grow: 1;\n    align-items: center;\n    display: flex;\n`;\n\nconst Actionbar = props => {\n  const { title, onBackClick } = props;\n\n  let back_btn = undefined;\n\n  if (onBackClick) {\n    back_btn = (\n      <BackBtn onClick={onBackClick}>\n        <img src={back_button} alt=\"Back\" />\n      </BackBtn>\n    );\n  }\n\n  return (\n    <Container>\n      {back_btn}\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nconst { func } = PropTypes;\n\nActionbar.propTypes = {\n  onBackClick: func,\n};\n\nexport default Actionbar;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n    100% {\n        transform: rotate(360deg);\n    }\n`;\n\nconst dash = keyframes`\n    0% {\n        stroke-dasharray: 1, 200;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -35px;\n    }\n    100% {\n        stroke-dasharray: 89, 200;\n        stroke-dashoffset: -124px;\n    }\n`;\n\nconst Container = styled.div`\n    width: 50px;\n    height: 50px;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n`;\n\nconst Loader = styled.div`\n    position: relative;\n    margin: 0 auto;\n    width: 50px;\n\n    &:before {\n        content: '';\n        display: block;\n        padding-top: 100%;\n    }\n`;\n\nconst Circle = styled.svg`\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    animation: ${rotate} 2s linear infinite;\n    transform-origin: center center;\n    margin: auto;\n    stroke: #000000;\n`;\n\nconst Path = styled.circle`\n    stroke-width: 3px;\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    animation: ${dash} 1.5s ease-in-out infinite;\n    stroke-linecap: round;\n`;\n\nconst Loading = () => {\n  return (\n    <Container>\n      <Loader>\n        <Circle viewBox=\"25 25 50 50\">\n          <Path cx=\"50\" cy=\"50\" r=\"15\" fill=\"none\" stroke-width=\"3\" stroke-miterlimit=\"10\" />\n        </Circle>\n      </Loader>\n    </Container>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    grid-template-rows: repeat(3, 180px [col-start]);\n    grid-template-columns: 25% 25% 25% 25%;\n    display: grid;\n`;\n\nconst Grid = props => {\n  const { children } = props;\n\n  return <Container>{children}</Container>;\n};\n\nconst { array } = propTypes;\n\nGrid.propTypes = {\n  items: array,\n};\n\nexport default Grid;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Loading from './Loading';\n\nconst Container = styled.div`\n    width: ${props => (props.width ? props.width : '100%')};\n    height: ${props => (props.height ? props.height : '100%')};\n    border: ${props => (props.border ? '#f2f2f2 solid 1px' : 'none')};\n    align-items: center;\n    justify-content: center;\n    display: flex;\n`;\n\nconst BgImage = styled.div`\n    position: absolute;\n    width: ${props => (props.width ? props.width : '100%')};\n    height: ${props => (props.height ? props.height : '100%')};\n    background-position: center center;\n    background-size: ${props => props.type};\n    background-image: url(${props => props.url});\n    background-repeat: no-repeat;\n    opacity: ${props => props.opacity};\n    transition: opacity 500ms ease-out;\n`;\n\nexport const TYPES = {\n  FILL: 'cover',\n  FIT: 'contain',\n};\n\nconst Picture = props => {\n  const [imageUrl, setImageUrl] = useState('');\n\n  const { height, type, url, width } = props;\n  let content = undefined;\n\n  if (imageUrl === '') {\n    content = <Loading />;\n  }\n\n  let image = undefined;\n\n  const onImageLoaded = () => {\n    const url = image.src;\n\n    setImageUrl(url);\n  };\n\n  image = new Image(width, height);\n  image.addEventListener('load', onImageLoaded, false);\n  image.src = url;\n\n  return (\n    <Container width={width} height={height}>\n      <BgImage\n        url={imageUrl}\n        opacity={imageUrl === '' ? 0 : 1}\n        width={width}\n        height={height}\n        type={type}\n      />\n      {content}\n    </Container>\n  );\n};\n\nconst { string, oneOf } = PropTypes;\n\nPicture.propTypes = {\n  height: string,\n  type: oneOf([TYPES.FILL, TYPES.FIT]),\n  url: string.isRequired,\n  width: string,\n};\n\nPicture.defaultProps = {\n  height: '100%',\n  type: TYPES.FILL,\n  width: '100%',\n};\n\nexport default Picture;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Picture from './Picture';\n\nconst Container = styled.div`\n    position: relative;\n    cursor: pointer;\n`;\n\nconst Title = styled.p`\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    color: rgba(255, 255, 255, 1);\n    padding: 10px;\n    margin: 0;\n    background: linear-gradient(to bottom, transparent 0%, rgba(0,0,0,0.75) 100%);\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: row;\n    display: flex;\n`;\n\nconst Image = props => {\n  const { id, title, imageUrl, onClick } = props;\n\n  return (\n    <Container onClick={() => onClick(id)}>\n      <Picture url={imageUrl} />\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nconst { string, func } = PropTypes;\n\nImage.propTypes = {\n  id: string.isRequired,\n  title: string,\n  imageUrl: string,\n  onClick: func,\n};\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Picture, {TYPES} from './Picture';\n\nconst Container = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n`;\n\nconst Title = styled.p`\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    color: rgba(255, 255, 255, 1);\n    padding: 10px;\n    margin: 0;\n    background: linear-gradient(to bottom, transparent 0%, rgba(0,0,0,0.75) 100%);\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: row;\n    display: flex;\n`;\n\nconst Slide = props => {\n  const { title, imageUrl } = props;\n\n  return (\n    <Container>\n      <Picture url={imageUrl} type={TYPES.FIT} />\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nconst { string } = PropTypes;\n\nSlide.propTypes = {\n  title: string,\n  imageUrl: string,\n};\n\nexport default Slide;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport _find from 'lodash/find';\n\nimport Actionbar from './components/Actionbar';\nimport Loading from './components/Loading';\nimport Grid from './components/Grid';\nimport Image from './components/Image';\nimport Slide from './components/Slide';\n\nconst Container = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    font-size: 14px;\n    line-height: 18px;\n    color: rgba(0, 0, 0, 0.8);\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n`;\n\nconst Content = styled.div`\n    position: relative;\n    width: 100%;\n    flex-grow: 1;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: flex-start;\n    display: flex;\n`;\n\nclass App extends Component {\n    static APP_STATES = {\n      ALBUMS: 'albums',\n      PHOTOS: 'photos',\n      PHOTO: 'photo',\n    };\n\n    state = {\n      view: App.APP_STATES.ALBUMS,\n      albums: undefined,\n      albumsById: undefined,\n      albumId: undefined,\n      photoId: undefined,\n    };\n\n    onBackClick = () => {\n      let { view } = this.state;\n\n      if (view === App.APP_STATES.PHOTOS) {\n        view = App.APP_STATES.ALBUMS;\n      } else if (view === App.APP_STATES.PHOTO) {\n        view = App.APP_STATES.PHOTOS;\n      }\n\n      this.setState({ view });\n    };\n\n    onImageClick = id => {\n      let { view, albumId, photoId } = this.state;\n\n      if (view === App.APP_STATES.ALBUMS) {\n        albumId = id;\n        view = App.APP_STATES.PHOTOS;\n      } else if (view === App.APP_STATES.PHOTOS) {\n        photoId = id;\n        view = App.APP_STATES.PHOTO;\n      }\n\n      this.setState({ view, albumId, photoId });\n    };\n\n    createImages = (data, onClick) => {\n      // loop through data and create an Image element for each one\n      let items = data.map(item => {\n        let image_url = undefined;\n\n        // check if photos exist\n        if (item.photos !== undefined && item.photos.length > 0) {\n          // store image url of first photo if it's album (has a photos attribute)\n          image_url = item.photos[0].url;\n        } else if (item.url !== undefined) {\n          // no photos attribute so it's a photo\n          image_url = item.url;\n        }\n\n        // create Image element\n        return <Image id={item.id} title={item.title} imageUrl={image_url} onClick={onClick} key={item.id} />;\n      });\n\n      return items;\n    };\n\n    componentDidMount() {\n      const { source } = this.props;\n\n      // use the built in fetch api to retrieve JSON file\n      fetch(source)\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          const albums = data.albums;\n          let albumsById = {};\n          albums.forEach(album => {\n            albumsById[album.id] = album;\n          });\n          // ... and update the state\n          this.setState({ albums, albumsById });\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    render() {\n      const { albums, albumsById, albumId, photoId, view } = this.state;\n\n      let container = undefined;\n      let onBackClick = undefined;\n\n      if (albums) {\n\n        let content = undefined;\n\n        if (view === App.APP_STATES.ALBUMS) {\n          const items = this.createImages(albums, this.onImageClick);\n          content = <Grid>{items}</Grid>;\n        } else if (view === App.APP_STATES.PHOTOS) {\n          const items = this.createImages(albumsById[albumId].photos, this.onImageClick);\n          content = <Grid>{items}</Grid>;\n          onBackClick = this.onBackClick;\n        } else if (view === App.APP_STATES.PHOTO) {\n          const photo = _find(albumsById[albumId].photos, photo => photo.id === photoId);\n          content = <Slide id={photo.id} title={photo.title} imageUrl={photo.url} />;\n          onBackClick = this.onBackClick;\n        }\n            \n        container = (\n          <Container>\n            <Actionbar title={'React Photos 2.0'} onBackClick={onBackClick} />\n            <Content>\n              {content}\n            </Content>\n          </Container>\n        );\n\n      } else {\n        container = (\n          <Container>\n            <Loading />\n          </Container>\n        );\n      }\n\n      return container;\n    }\n}\n\nconst { string } = PropTypes;\n\nApp.propTypes = {\n  source: string.isRequired,\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App source=\"sample_data.json\" />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/back-arrow.8222cb96.svg\";"],"sourceRoot":""}